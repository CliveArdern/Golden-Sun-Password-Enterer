using System.Collections.Generic;

namespace GoldenSunPasswordSender
{
    internal static class Layout
    {
        public static readonly Dictionary<char, (int row, int col)> positions = new()
        {
            { 'A', (0, 0) },
            { 'B', (0, 1) },
            { 'C', (0, 2) },
            { 'D', (0, 3) },
            { 'E', (0, 4) },
            { 'F', (0, 5) },
            { 'G', (0, 6) },
            { 'H', (0, 7) },
            { 'J', (0, 8) },
            { 'K', (0, 9) },
            { 'L', (0, 10) },
            { 'M', (0, 11) },
            { 'N', (0, 12) },
            { 'P', (0, 13) },
            { 'Q', (0, 14) },
            { 'R', (0, 15) },
            { 'S', (1, 0) },
            { 'T', (1, 1) },
            { 'U', (1, 2) },
            { 'V', (1, 3) },
            { 'W', (1, 4) },
            { 'X', (1, 5) },
            { 'Y', (1, 6) },
            { 'Z', (1, 7) },
            { '2', (1, 8) },
            { '3', (1, 9) },
            { '4', (1, 10) },
            { '5', (1, 11) },
            { '6', (1, 12) },
            { '7', (1, 13) },
            { '8', (1, 14) },
            { '9', (1, 15) },
            { 'a', (2, 0) },
            { 'b', (2, 1) },
            { 'c', (2, 2) },
            { 'd', (2, 3) },
            { 'e', (2, 4) },
            { 'f', (2, 5) },
            { 'g', (2, 6) },
            { 'h', (2, 7) },
            { 'i', (2, 8) },
            { 'j', (2, 9) },
            { 'k', (2, 10) },
            { 'm', (2, 11) },
            { 'n', (2, 12) },
            { 'p', (2, 13) },
            { 'q', (2, 14) },
            { 'r', (2, 15) },
            { 's', (3, 0) },
            { 't', (3, 1) },
            { 'u', (3, 2) },
            { 'v', (3, 3) },
            { 'w', (3, 4) },
            { 'x', (3, 5) },
            { 'y', (3, 6) },
            { 'z', (3, 7) },
            { '!', (3, 8) },
            { '?', (3, 9) },
            { '#', (3, 10) },
            { '&', (3, 11) },
            { '$', (3, 12) },
            { '%', (3, 13) },
            { '+', (3, 14) },
            { '=', (3, 15) },
            { ' ', (0, 16) }, // Space
            { '<', (1, 16) }, // Return
            { '>', (3, 16) }  // Finish
        };
    }
}